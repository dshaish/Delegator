// Generated 09:11:28 04/07/2010 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "delegator")
public class Employee implements java.io.Serializable {

	private int eid;
	private String userName;
	private String name;
	private String jobDesc;
	private String lname;
	private Date bdate;
	private String address;
	private String email;
	private Integer phoneNum;
	private String auth;
	private Integer password;
	private Set taskses = new HashSet(0);
	private Late late;
	private Set employeesForManagerId = new HashSet(0);
	private Set doneBies = new HashSet(0);
	private Set archiveds = new HashSet(0);
	private Set taskses_1 = new HashSet(0);
	private Set divisionses = new HashSet(0);
	private Set employeesForEid = new HashSet(0);
	private Set archiveds_1 = new HashSet(0);
	private Set archiveds_2 = new HashSet(0);
	private Set employeesForManagerId_1 = new HashSet(0);
	private Set archiveds_3 = new HashSet(0);
	private Set divisionses_1 = new HashSet(0);
	private OnTime onTime;
	private Set employeesForEid_1 = new HashSet(0);
	private Set divisionses_2 = new HashSet(0);
	private Set divisionses_3 = new HashSet(0);
	private Set doneBies_1 = new HashSet(0);

	public Employee() {
	}

	public Employee(int eid, String userName, String name, String jobDesc,
			String auth) {
		this.eid = eid;
		this.userName = userName;
		this.name = name;
		this.jobDesc = jobDesc;
		this.auth = auth;
	}

	public Employee(int eid, String userName, String name, String jobDesc,
			String lname, Date bdate, String address, String email,
			Integer phoneNum, String auth, Integer password, Set taskses,
			Late late, Set employeesForManagerId, Set doneBies, Set archiveds,
			Set taskses_1, Set divisionses, Set employeesForEid,
			Set archiveds_1, Set archiveds_2, Set employeesForManagerId_1,
			Set archiveds_3, Set divisionses_1, OnTime onTime,
			Set employeesForEid_1, Set divisionses_2, Set divisionses_3,
			Set doneBies_1) {
		this.eid = eid;
		this.userName = userName;
		this.name = name;
		this.jobDesc = jobDesc;
		this.lname = lname;
		this.bdate = bdate;
		this.address = address;
		this.email = email;
		this.phoneNum = phoneNum;
		this.auth = auth;
		this.password = password;
		this.taskses = taskses;
		this.late = late;
		this.employeesForManagerId = employeesForManagerId;
		this.doneBies = doneBies;
		this.archiveds = archiveds;
		this.taskses_1 = taskses_1;
		this.divisionses = divisionses;
		this.employeesForEid = employeesForEid;
		this.archiveds_1 = archiveds_1;
		this.archiveds_2 = archiveds_2;
		this.employeesForManagerId_1 = employeesForManagerId_1;
		this.archiveds_3 = archiveds_3;
		this.divisionses_1 = divisionses_1;
		this.onTime = onTime;
		this.employeesForEid_1 = employeesForEid_1;
		this.divisionses_2 = divisionses_2;
		this.divisionses_3 = divisionses_3;
		this.doneBies_1 = doneBies_1;
	}

	@Id
	@Column(name = "EId", unique = true, nullable = false)
	public int getEid() {
		return this.eid;
	}

	public void setEid(int eid) {
		this.eid = eid;
	}

	@Column(name = "UserName", nullable = false)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "JobDesc", nullable = false)
	public String getJobDesc() {
		return this.jobDesc;
	}

	public void setJobDesc(String jobDesc) {
		this.jobDesc = jobDesc;
	}

	@Column(name = "LName")
	public String getLname() {
		return this.lname;
	}

	public void setLname(String lname) {
		this.lname = lname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Bdate", length = 10)
	public Date getBdate() {
		return this.bdate;
	}

	public void setBdate(Date bdate) {
		this.bdate = bdate;
	}

	@Column(name = "Address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PhoneNum")
	public Integer getPhoneNum() {
		return this.phoneNum;
	}

	public void setPhoneNum(Integer phoneNum) {
		this.phoneNum = phoneNum;
	}

	@Column(name = "Auth", nullable = false, length = 15)
	public String getAuth() {
		return this.auth;
	}

	public void setAuth(String auth) {
		this.auth = auth;
	}

	@Column(name = "Password")
	public Integer getPassword() {
		return this.password;
	}

	public void setPassword(Integer password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getTaskses() {
		return this.taskses;
	}

	public void setTaskses(Set taskses) {
		this.taskses = taskses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employee")
	public Late getLate() {
		return this.late;
	}

	public void setLate(Late late) {
		this.late = late;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "delegator", joinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) })
	public Set getEmployeesForManagerId() {
		return this.employeesForManagerId;
	}

	public void setEmployeesForManagerId(Set employeesForManagerId) {
		this.employeesForManagerId = employeesForManagerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getDoneBies() {
		return this.doneBies;
	}

	public void setDoneBies(Set doneBies) {
		this.doneBies = doneBies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getArchiveds() {
		return this.archiveds;
	}

	public void setArchiveds(Set archiveds) {
		this.archiveds = archiveds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getTaskses_1() {
		return this.taskses_1;
	}

	public void setTaskses_1(Set taskses_1) {
		this.taskses_1 = taskses_1;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set getDivisionses() {
		return this.divisionses;
	}

	public void setDivisionses(Set divisionses) {
		this.divisionses = divisionses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "delegator", joinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) })
	public Set getEmployeesForEid() {
		return this.employeesForEid;
	}

	public void setEmployeesForEid(Set employeesForEid) {
		this.employeesForEid = employeesForEid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getArchiveds_1() {
		return this.archiveds_1;
	}

	public void setArchiveds_1(Set archiveds_1) {
		this.archiveds_1 = archiveds_1;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set getArchiveds_2() {
		return this.archiveds_2;
	}

	public void setArchiveds_2(Set archiveds_2) {
		this.archiveds_2 = archiveds_2;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "delegator", joinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) })
	public Set getEmployeesForManagerId_1() {
		return this.employeesForManagerId_1;
	}

	public void setEmployeesForManagerId_1(Set employeesForManagerId_1) {
		this.employeesForManagerId_1 = employeesForManagerId_1;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set getArchiveds_3() {
		return this.archiveds_3;
	}

	public void setArchiveds_3(Set archiveds_3) {
		this.archiveds_3 = archiveds_3;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set getDivisionses_1() {
		return this.divisionses_1;
	}

	public void setDivisionses_1(Set divisionses_1) {
		this.divisionses_1 = divisionses_1;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "employee")
	public OnTime getOnTime() {
		return this.onTime;
	}

	public void setOnTime(OnTime onTime) {
		this.onTime = onTime;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "works_for", catalog = "delegator", joinColumns = { @JoinColumn(name = "ManagerId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Eid", nullable = false, updatable = false) })
	public Set getEmployeesForEid_1() {
		return this.employeesForEid_1;
	}

	public void setEmployeesForEid_1(Set employeesForEid_1) {
		this.employeesForEid_1 = employeesForEid_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getDivisionses_2() {
		return this.divisionses_2;
	}

	public void setDivisionses_2(Set divisionses_2) {
		this.divisionses_2 = divisionses_2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getDivisionses_3() {
		return this.divisionses_3;
	}

	public void setDivisionses_3(Set divisionses_3) {
		this.divisionses_3 = divisionses_3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set getDoneBies_1() {
		return this.doneBies_1;
	}

	public void setDoneBies_1(Set doneBies_1) {
		this.doneBies_1 = doneBies_1;
	}

}
